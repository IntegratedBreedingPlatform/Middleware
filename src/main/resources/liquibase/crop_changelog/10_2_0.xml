<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

	<changeSet author="vanina" id="v10.2.0-1">
		<preConditions onFail="MARK_RAN">
			<and>
				<tableExists tableName="nd_experiment"/>
				<columnExists tableName="nd_experiment" columnName="plot_id"/>
				<not>
					<columnExists tableName="nd_experiment" columnName="obs_unit_id"/>
				</not>
			</and>
		</preConditions>
		<comment> Change column name plot_id as obs_unit_id in nd_experiment table </comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE nd_experiment
			CHANGE COLUMN plot_id obs_unit_id CHAR(13) CHARACTER SET 'utf8' NULL DEFAULT NULL ;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v10.2.0-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				select count(*)
				from cvterm
				where cvterm_id = 8201;
			</sqlCheck>
		</preConditions>
		<comment> Change name and definition of cvterm 8201, previous PLOT_ID, in cvterm table </comment>
		<sql dbms="mysql" splitStatements="true">
			update cvterm
			set name = 'OBS_UNIT_ID', definition = 'Field observation unit id - assigned (text)'
			where cvterm_id = 8201;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v10.2.0-3">
		<preConditions onFail="MARK_RAN">
			<not>
				<sqlCheck expectedResult="0">
					select count(*)
					from projectprop
					where variable_id = 8201;
				</sqlCheck>
			</not>
		</preConditions>
		<comment> Change alias of variable_id 8201, previous PLOT_ID, in projectprop table </comment>
		<sql dbms="mysql" splitStatements="true">
			update projectprop
			set alias = 'OBS_UNIT_ID'
			where variable_id = 8201;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v10.2.0-4">
		<preConditions onFail="CONTINUE">
			<sqlCheck expectedResult="0">
				SELECT COUNT(*) FROM phenotype phenotype_duplicate INNER JOIN phenotype phenotype
				WHERE phenotype.phenotype_id > phenotype_duplicate.phenotype_id AND phenotype_duplicate.observable_id = phenotype.observable_id AND phenotype_duplicate.nd_experiment_id = phenotype.nd_experiment_id;
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE phenotype ADD UNIQUE INDEX phenotype_UNIQUE (observable_id ASC, nd_experiment_id ASC);
		</sql>
	</changeSet>
</databaseChangeLog>
