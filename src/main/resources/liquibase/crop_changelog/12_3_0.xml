<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

	<changeSet author="marie" id="v12.3.0-1">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT count(1) FROM dataset_type WHERE dataset_type_id = 2;
			</sqlCheck>
		</preConditions>
		<comment>
			Configure means type as observation
		</comment>
		<sql dbms="mysql" splitStatements="true">
			UPDATE dataset_type
			SET is_obs_type = 1
			WHERE dataset_type_id = 2;
		</sql>
	</changeSet>

	<changeSet author="aldrin" id="v12.3.0-2">
        <preConditions onFail="MARK_RAN">
            <viewExists viewName="h2h_details"/>
        </preConditions>
		<comment>
			Removing project_relationship table from the h2h_details view.
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER
			ALGORITHM = UNDEFINED
			DEFINER = root@localhost
			SQL SECURITY DEFINER
			VIEW h2h_details AS
			SELECT
				`proj`.`study_id` AS `study_id`,
				`e`.`project_id` AS `project_id`,
				`e`.`type_id` AS `type_id`,
				`e`.`nd_geolocation_id` AS `location_id`,
				`e`.`type_id` AS `observation_type`,
				`e`.`nd_experiment_id` AS `experiment_id`,
				`p`.`phenotype_id` AS `phenotype_id`,
				`td`.`trait_name` AS `trait_name`,
				`p`.`value` AS `observed_value`,
				`s`.`stock_id` AS `stock_id`,
				`s`.`name` AS `entry_designation`
    		FROM
				(((((`stock` `s`
				JOIN `nd_experiment` `e` ON ((`e`.`stock_id` = `s`.`stock_id`)))
				JOIN `phenotype` `p` ON ((`p`.`nd_experiment_id` = `e`.`nd_experiment_id`)))
				JOIN `standard_variable_details` `svd` ON ((`svd`.`cvterm_id` = `p`.`observable_id`)))
				JOIN `trait_details` `td` ON ((`td`.`trait_id` = `svd`.`property_id`)))
				JOIN `project` `proj` ON ((`proj`.`project_id` = `e`.`project_id`)))
			WHERE
				(`e`.`type_id` = 1170)
					OR (`e`.`type_id` = 1155)
			ORDER BY `e`.`project_id` , `e`.`nd_geolocation_id` , `e`.`type_id` , `td`.`trait_name` , `s`.`name`
		</sql>
	</changeSet>
	<changeSet author="aldrin" id="v12.3.0-3">
        <preConditions onFail="MARK_RAN">
            <viewExists viewName="trial_study_locations"/>
        </preConditions>
		<comment>
			Removing project_relationship table from the trial_study_locations view.
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER
			ALGORITHM = UNDEFINED
			DEFINER = root@localhost
			SQL SECURITY DEFINER
			VIEW trial_study_locations AS
			SELECT DISTINCT
				`gp`.`nd_geolocation_id` AS `envtId`,
				`l`.`lname` AS `locationName`,
				`prov`.`lname` AS `provinceName`,
				`c`.`isoabbr` AS `isoabbr`,
				`p`.`project_id` AS `project_id`,
				`p`.`name` AS `name`,
				`gp`.`value` AS `locationId`,
				`p`.`description` AS `description`
			FROM
				((((((`nd_geolocationprop` `gp`
				JOIN `nd_experiment` `e` ON (((`e`.`nd_geolocation_id` = `gp`.`nd_geolocation_id`)
					AND (`e`.`nd_experiment_id` = (SELECT
						MIN(`min`.`nd_experiment_id`)
					FROM
						`nd_experiment` `min`
					WHERE
						(`min`.`nd_geolocation_id` = `gp`.`nd_geolocation_id`)))))))
				JOIN `project` `p` ON `p`.`project_id` = `e`.`project_id` AND `p`.`study_id` IS NOT NULL)
				LEFT JOIN `location` `l` ON ((`l`.`locid` = `gp`.`value`)))
				LEFT JOIN `location` `prov` ON ((`prov`.`locid` = `l`.`snl1id`)))
				LEFT JOIN `cntry` `c` ON ((`c`.`cntryid` = `l`.`cntryid`)))
			WHERE
				(`gp`.`type_id` = 8190)
		</sql>
	</changeSet>
	<changeSet author="aldrin" id="v12.3.0-4">
        <preConditions onFail="MARK_RAN">
            <viewExists viewName="germplasm_trial_details"/>
        </preConditions>
		<comment>
			Removing project_relationship table from the germplasm_trial_details view.
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER
			ALGORITHM = UNDEFINED
			DEFINER = root@localhost
			SQL SECURITY DEFINER
			VIEW germplasm_trial_details AS
			SELECT
				`project`.`study_id` AS `study_id`,
				`e`.`project_id` AS `project_id`,
				`e`.`type_id` AS `type_id`,
				`e`.`nd_geolocation_id` AS `envt_id`,
				`e`.`type_id` AS `observation_type`,
				`e`.`nd_experiment_id` AS `experiment_id`,
				`p`.`phenotype_id` AS `phenotype_id`,
				`td`.`trait_name` AS `trait_name`,
				`svd`.`cvterm_id` AS `stdvar_id`,
				`svd`.`stdvar_name` AS `stdvar_name`,
				`p`.`value` AS `observed_value`,
				`s`.`stock_id` AS `stock_id`,
				`s`.`name` AS `entry_designation`,
				`g`.`gid` AS `gid`
			FROM
				((((((`stock` `s`
				JOIN `nd_experiment` `e` ON ((`e`.`stock_id` = `s`.`stock_id`)))
				JOIN `phenotype` `p` ON ((`p`.`nd_experiment_id` = `e`.`nd_experiment_id`)))
				JOIN `standard_variable_details` `svd` ON ((`svd`.`cvterm_id` = `p`.`observable_id`)))
				JOIN `trait_details` `td` ON ((`td`.`trait_id` = `svd`.`property_id`)))
				JOIN `project` `project` ON ((`project`.`project_id` = `e`.`project_id`)))
				JOIN `germplsm` `g` ON ((`s`.`dbxref_id` = `g`.`gid`)))
			WHERE
				`e`.`type_id` = 1170
					OR `e`.`type_id` = 1155
			ORDER BY `e`.`project_id` , `e`.`nd_geolocation_id` , `e`.`type_id` , `td`.`trait_name` , `s`.`name`
		</sql>
	</changeSet>


</databaseChangeLog>
