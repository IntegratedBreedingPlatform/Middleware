<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
		http://www.liquibase.org/xml/ns/dbchangelog-ext
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<changeSet author="darla" id="1">
		<!-- De-duplication of the UDFLDs in rice database so that unique constraint 
			(see changeset 3) can be applied successfully. -->
		<preConditions onFail="CONTINUE">
			<sqlCheck expectedResult="1">select case when 'ibdbv2_rice_merged' = DATABASE() then 1 else 0 end from dual;</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			DELETE from udflds where fldno in (2002, 2003, 2004, 2005);
		</sql>
	</changeSet>
	
	<changeSet author="maeisabelle" id="2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM (
					SELECT wbPerson.*
					FROM workbench.persons wbPerson
					INNER JOIN workbench.users u
					ON u.personid = wbPerson.personid
					INNER JOIN workbench.workbench_project_user_info projUser
					ON projUser.user_id = u.userid
					INNER JOIN workbench.workbench_project p
					ON projUser.project_id = p.project_id
					WHERE NOT EXISTS (
					  SELECT 1 
					  FROM persons cropPerson
					  WHERE cropPerson.fname = wbPerson.fname
					  AND cropPerson.lname = wbPerson.lname
					)
					GROUP BY wbPerson.personid
					LIMIT 1
				) AS a;
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO persons(fname, lname, ioname, institid, ptitle, poname, plangu, pphone, 
			pextent, pfax, pemail, prole, sperson, eperson, pstatus, pnotes, contact)
			SELECT wbPerson.fname, wbPerson.lname, wbPerson.ioname, wbPerson.institid, wbPerson.ptitle,
			wbPerson.poname, wbPerson.plangu, wbPerson.pphone, wbPerson.pextent, wbPerson.pfax, wbPerson.pemail,
			wbPerson.prole, wbPerson.sperson, wbPerson.eperson, wbPerson.pstatus, wbPerson.pnotes, wbPerson.contact
			FROM workbench.persons wbPerson
			INNER JOIN workbench.users u
			ON u.personid = wbPerson.personid
			INNER JOIN workbench.workbench_project_user_info projUser
			ON projUser.user_id = u.userid
			INNER JOIN workbench.workbench_project p
			ON projUser.project_id = p.project_id
			WHERE NOT EXISTS (
			  SELECT 1 
			  FROM persons cropPerson
			  WHERE cropPerson.fname = wbPerson.fname
			  AND cropPerson.lname = wbPerson.lname
			)
			GROUP BY wbPerson.personid
		</sql>
	</changeSet>
	
	<changeSet author="maeisabelle" id="3">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM (
					SELECT u.* FROM workbench.users u
					INNER JOIN workbench.workbench_project_user_info projUser
					ON projUser.user_id = u.userid
					INNER JOIN workbench.workbench_project p
					ON projUser.project_id = p.project_id
					WHERE NOT EXISTS (
					  SELECT 1 
					  FROM users cropUser
					  WHERE cropUser.uname = u.uname
					)
					GROUP BY u.userid
					LIMIT 1
				) AS a;
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO users(instalid, ustatus, uaccess, utype, uname, upswd, personid, adate, cdate)
			SELECT u.instalid, u.ustatus, u.uaccess, u.utype, u.uname, u.upswd, cropPerson.personid, u.adate, u.cdate
			FROM workbench.users u
			INNER JOIN workbench.persons wbPerson
			ON wbPerson.personid = u.personid
			INNER JOIN persons cropPerson
			ON cropPerson.fname = wbPerson.fname
			AND cropPerson.lname = wbPerson.lname
			INNER JOIN workbench.workbench_project_user_info projUser
			ON projUser.user_id = u.userid
			INNER JOIN workbench.workbench_project p
			ON projUser.project_id = p.project_id
			WHERE NOT EXISTS (
			  SELECT 1 
			  FROM users cropUser
			  WHERE cropUser.uname = u.uname
			)
			GROUP BY u.userid
		</sql>
	</changeSet>
	
	<changeSet author="maeisabelle" id="4">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM (
					SELECT p.project_id, u.userid as workbench_user_id, cropUser.userid as ibdb_user_id
					FROM workbench.users u
					INNER JOIN workbench.workbench_project_user_info projUser
					ON projUser.user_id = u.userid
					INNER JOIN workbench.workbench_project p
					ON projUser.project_id = p.project_id
					INNER JOIN users cropUser
					ON cropUser.uname = u.uname
					WHERE NOT EXISTS (
					  SELECT 1 
					  FROM workbench.workbench_ibdb_user_map wbToCrop
					  WHERE wbToCrop.project_id = projUser.project_id
					  AND wbToCrop.ibdb_user_id = cropUser.userid
					  AND wbToCrop.workbench_user_id = u.userid
					)
					GROUP BY p.project_id,  u.userid, cropUser.userid
					LIMIT 1
				) AS a;
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO workbench.workbench_ibdb_user_map(project_id, workbench_user_id, ibdb_user_id)
			SELECT p.project_id, u.userid as workbench_user_id, cropUser.userid as ibdb_user_id
			FROM workbench.users u
			INNER JOIN workbench.workbench_project_user_info projUser
			ON projUser.user_id = u.userid
			INNER JOIN workbench.workbench_project p
			ON projUser.project_id = p.project_id
			INNER JOIN users cropUser
			ON cropUser.uname = u.uname
			WHERE NOT EXISTS (
			  SELECT 1 
			  FROM workbench.workbench_ibdb_user_map wbToCrop
			  WHERE wbToCrop.project_id = projUser.project_id
			  AND wbToCrop.ibdb_user_id = cropUser.userid
			  AND wbToCrop.workbench_user_id = u.userid
			)
			GROUP BY p.project_id,  u.userid, cropUser.userid
		</sql>
	</changeSet>

</databaseChangeLog>