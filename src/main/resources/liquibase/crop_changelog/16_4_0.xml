<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

	<changeSet author="mderamos" id="v16.4.0-1">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				SELECT
				COUNT(*)
				FROM
				germplsm
				WHERE
				germplsm_uuid IS NULL;
			</sqlCheck>
		</preConditions>
		<comment>
			Set germplsm_uuid values to NULL and drop the germplsm_uuid unique index
		</comment>
		<sql dbms="mysql" splitStatements="false">
			UPDATE germplsm SET germplsm_uuid = NULL;
			ALTER TABLE germplsm DROP INDEX germplsm_uuid;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.0-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'populate_germplsm_uuid_values';
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="false">
			DROP PROCEDURE populate_germplsm_uuid_values;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.0-3">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'populate_germplsm_uuid_values';
			</sqlCheck>
		</preConditions>
		<comment>
			Create Stored procedure that populates the germplsm_uuid values
		</comment>
		<sql dbms="mysql" splitStatements="false">
			CREATE PROCEDURE populate_germplsm_uuid_values()
			BEGIN

			DECLARE useUuid INT DEFAULT 1;
			DECLARE hasNullUuidCount INT DEFAULT 1;
			DECLARE duplicates INT DEFAULT 1;

			SELECT use_uuid
			INTO useUuid
			FROM workbench.workbench_crop
			WHERE db_name = DATABASE();

			IF useUuid = 0	THEN

			WHILE(hasNullUuidCount > 0) DO

			UPDATE germplsm g
			SET germplsm_uuid = CONCAT((SELECT plot_code_prefix
			FROM workbench.workbench_crop wc
			WHERE db_name = DATABASE()),
			'G',
			RIGHT(sha1(CONCAT(uuid(), g.gid)), 8))
			WHERE g.germplsm_uuid IS NULL;

			SELECT sum(c)
			into duplicates
			FROM (SELECT count(1) c
			FROM germplsm
			WHERE germplsm_uuid IS NOT NULL
			GROUP BY germplsm_uuid
			HAVING count(1) >= 2) T;

			IF duplicates > 0 THEN

			UPDATE germplsm
			SET germplsm_uuid = NULL
			WHERE gid IN (
			SELECT gid
			FROM (
			SELECT g1.gid
			FROM germplsm g1
			WHERE EXISTS
			(
			SELECT 1
			FROM germplsm g2
			WHERE g1.germplsm_uuid = g2.germplsm_uuid
			LIMIT 1, 1
			) AND g1.germplsm_uuid IS NOT NULL) AS G);

			END IF;

			SELECT count(*) into hasNullUuidCount
			FROM germplsm where germplsm_uuid IS NULL;

			END WHILE;

			ELSE

			UPDATE germplsm g
			SET germplsm_uuid = uuid()
			WHERE g.germplsm_uuid IS NULL;

			END IF;

			END;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.0-4">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'populate_germplsm_uuid_values';
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="false">
			call populate_germplsm_uuid_values();
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.0-5">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'populate_germplsm_uuid_values';
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="false">
			DROP PROCEDURE populate_germplsm_uuid_values;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.0-6">
		<preConditions onFail="MARK_RAN">
			<not>
				<sqlCheck expectedResult="0">
					SELECT
					COUNT(*)
					FROM
					INFORMATION_SCHEMA.TABLE_CONSTRAINTS
					WHERE
					TABLE_NAME = 'germplsm'
					AND CONSTRAINT_NAME = 'germplsm_uuid_UNIQUE'
					AND TABLE_SCHEMA = DATABASE();
				</sqlCheck>
			</not>
		</preConditions>
		<comment>Add unique constraint</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE germplsm
			ADD UNIQUE INDEX germplsm_uuid_UNIQUE (germplsm_uuid ASC);
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.0-7">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) > 0 FROM germplsm WHERE deleted = 1 and germplsm_uuid is not null;
			</sqlCheck>
		</preConditions>
		<comment>Concat hash and date to germplsm_uuid for the deleted germplasm</comment>
		<sql dbms="mysql" splitStatements="true">
			UPDATE germplsm SET germplsm_uuid = CONCAT(germplsm_uuid, '#', DATE_FORMAT(current_timestamp, "%Y%m%d%H%i%s%f")) WHERE deleted = 1 and germplsm_uuid is not null;
		</sql>
	</changeSet>

</databaseChangeLog>
