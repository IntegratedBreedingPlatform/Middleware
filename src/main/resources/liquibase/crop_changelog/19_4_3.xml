<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
	<changeSet  author="mderamos"  id="19.4.3-1">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'add_column_if_not_exists';
			</sqlCheck>
		</preConditions>
		<dropProcedure procedureName="add_column_if_not_exists"/>
	</changeSet>

	<changeSet  author="mderamos"  id="19.4.3-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'add_primary_key_if_not_exists';
			</sqlCheck>
		</preConditions>
		<dropProcedure procedureName="add_primary_key_if_not_exists"/>
	</changeSet>

	<changeSet  author="mderamos"  id="19.4.3-3">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'create_fulltext_index_if_not_exists';
			</sqlCheck>
		</preConditions>
		<dropProcedure procedureName="create_fulltext_index_if_not_exists"/>
	</changeSet>

	<changeSet  author="mderamos"  id="19.4.3-4">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'create_index_if_not_exists';
			</sqlCheck>
		</preConditions>
		<dropProcedure procedureName="create_index_if_not_exists"/>
	</changeSet>

	<changeSet  author="mderamos"  id="19.4.3-5">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'drop_column_if_exists';
			</sqlCheck>
		</preConditions>
		<dropProcedure procedureName="drop_column_if_exists"/>
	</changeSet>

	<changeSet  author="mderamos"  id="19.4.3-6">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'drop_fk_if_exists';
			</sqlCheck>
		</preConditions>
		<dropProcedure procedureName="drop_fk_if_exists"/>
	</changeSet>

	<changeSet  author="mderamos"  id="19.4.3-7">
		<sql dbms="mysql" splitStatements="false">
			DROP FUNCTION IF EXISTS GetNumberInName
		</sql>
	</changeSet>

	<changeSet author="corina" id="v19.4.3-8">
        <preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) > 0 FROM listnms WHERE SUBSTRING(listdate,5,4)='0000';
			</sqlCheck>
		</preConditions>
        <comment> Correct invalid listdate values. IBP-5327 </comment>
		<sql dbms="mysql" splitStatements="true">
			UPDATE listnms SET listdate=CAST(CONCAT(SUBSTRING(listdate,1,4),'0101') AS UNSIGNED) WHERE SUBSTRING(listdate,5,4)='0000';
		</sql>
	</changeSet>

	<changeSet author="lkovacic" id="v19.4.3-9">
		<preConditions onFail="MARK_RAN">
			<and>
				<sqlCheck expectedResult="0">
					SELECT COUNT(*) FROM list_data_default_view WHERE name = 'ENTRY_CODE';
				</sqlCheck>
			</and>
		</preConditions>
		<comment>
			Add 'ENTRY_CODE' as default column
		</comment>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO list_data_default_view (name) VALUES ('ENTRY_CODE');

			INSERT INTO list_data_view(listid, static_id)
			SELECT listid, 8300 FROM list_data_view WHERE listid NOT IN
			(SELECT listid FROM list_data_view WHERE static_id = 8300) GROUP BY listid;
		</sql>
	</changeSet>

</databaseChangeLog>
