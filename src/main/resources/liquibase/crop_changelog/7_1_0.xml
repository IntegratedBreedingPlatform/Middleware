<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
		http://www.liquibase.org/xml/ns/dbchangelog-ext
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<changeSet author="vanina" id="v7.1-1">
		<preConditions onFail="MARK_RAN">
				<sqlCheck expectedResult="1">
					SELECT COUNT(*)
					FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
					WHERE TABLE_NAME = 'sample'
					AND CONSTRAINT_NAME = 'fk_sample_list'
					AND TABLE_SCHEMA = DATABASE();
				</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE sample
			DROP FOREIGN KEY fk_sample_list;
			ALTER TABLE sample
			CHANGE COLUMN sample_list sample_list INT(11) NULL ;
			ALTER TABLE sample
			ADD CONSTRAINT fk_sample_list
			  FOREIGN KEY (sample_list)
			  REFERENCES sample_list (list_id)
			  ON DELETE NO ACTION
			  ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="nahuel" id="v7.1.0-1">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="projectprop" columnName="variable_id"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE `projectprop_old` (
			`projectprop_id` INT(11) NOT NULL AUTO_INCREMENT,
			`project_id`     INT(11) NOT NULL,
			`type_id`        INT(11) NOT NULL,
			`value`          VARCHAR(255)     DEFAULT NULL,
			`rank`           INT(11) NOT NULL DEFAULT '0',
			PRIMARY KEY (`projectprop_id`)
			) AS SELECT *
			 FROM projectprop;

			CREATE TABLE `projectprop_new` (
			`projectprop_id` int(11) NOT NULL AUTO_INCREMENT,
			`project_id` int(11) NOT NULL,
			`type_id` int(11) NOT NULL,
			`value` varchar(255) DEFAULT NULL,
			`rank` int(11) NOT NULL DEFAULT '0',
			`variable_id` int(11) NOT NULL,
			`alias` varchar(255) DEFAULT NULL,
			PRIMARY KEY (`projectprop_id`),
			UNIQUE KEY `projectprop_idx1` (`project_id`,`type_id`,`rank`,`variable_id`),
			KEY `projectprop_idx2` (`type_id`),
			KEY `projectprop_idx3` (`variable_id`),
			CONSTRAINT `projectprop_2_fk1` FOREIGN KEY (`project_id`) REFERENCES `project` (`project_id`) ON DELETE CASCADE,
			CONSTRAINT `projectprop_2_fk2` FOREIGN KEY (`type_id`) REFERENCES `cvterm` (`cvterm_id`) ON DELETE CASCADE
			) ENGINE=InnoDB DEFAULT CHARSET=utf8 AS SELECT
			   pp.project_id,
			   pptype.type_id 'type_id',
			   ppvalue.value  'value',
			   pp.rank,
			   pp.value       'variable_id',
			   pptype.value   'alias'
			 FROM projectprop pp
			   INNER JOIN projectprop pptype ON pptype.rank = pp.rank
												AND pptype.project_id = pp.project_id
												AND pptype.type_id != 1060 -- Variable description
												AND pptype.type_id != 1070 -- Standardvariableid
												AND pp.value != pptype.type_id
			   LEFT JOIN projectprop ppvalue ON pp.value = ppvalue.type_id
												AND pp.rank = ppvalue.rank
												AND pp.project_id = ppvalue.project_id
			   LEFT JOIN cvterm variable ON pp.value = variable.cvterm_id
			 WHERE pp.type_id = 1070
			 ORDER BY pp.project_id, pp.rank;

			DROP TABLE projectprop;

			RENAME TABLE
			projectprop_new TO projectprop;
		</sql>
	</changeSet>

	<changeSet author="nahuel" id="v7.1.0-2">
		<preConditions>
			<viewExists viewName="project_variable_details" />
		</preConditions>
		<dropView viewName="project_variable_details"></dropView>
	</changeSet>

	<changeSet author="nahuel" id="v7.1.0-3" >
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="project" columnName="deleted" />
			</not>
		</preConditions>
		<addColumn tableName="project">
			<column name="deleted" type="TINYINT(1) UNSIGNED ZEROFILL" defaultValue="0">
				<constraints nullable="false"/>
			</column>
		</addColumn>
	</changeSet>

	<changeSet author="nahuel" id="v7.1.0-4" >
		<preConditions>
			<columnExists tableName="project" columnName="deleted" />
		</preConditions>
		<sql>
			DROP TABLE IF EXISTS deleted_studies;

			CREATE TEMPORARY TABLE deleted_studies AS
			  SELECT p.project_id
			  FROM projectprop pp
				INNER JOIN project p ON pp.project_id = p.project_id
			  WHERE pp.variable_id = 8006 AND value = 12990;

			UPDATE project
			SET deleted = 1
			WHERE project_id IN (
			  SELECT project_id
			  FROM deleted_studies
			);

			UPDATE project
			SET deleted = 1
			WHERE project_id IN (
			  SELECT T.project_id
			  FROM (
					 SELECT subject.project_id
					 FROM project_relationship pr
					   INNER JOIN project object ON pr.object_project_id = object.project_id
					   INNER JOIN project subject ON pr.subject_project_id = subject.project_id
													 AND object.project_id IN (
						 SELECT project_id
						 FROM deleted_studies
					   )) AS T);

			DELETE
			FROM projectprop
			WHERE variable_id = 8006 AND value = 12990;

			DELETE
			FROM cvterm
			WHERE cvterm_id = 8006;
		</sql>
	</changeSet>


</databaseChangeLog>
