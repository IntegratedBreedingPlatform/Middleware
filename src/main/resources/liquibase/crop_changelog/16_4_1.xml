<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">


	<changeSet author="mderamos" id="v16.4.1-1">
		<preConditions onFail="MARK_RAN">
			<and>
				<sqlCheck expectedResult="1">
					SELECT COUNT(*) > 0
					FROM germplsm
					WHERE germplsm_uuid IS NULL;
				</sqlCheck>
				<not>
					<sqlCheck expectedResult="0">
						SELECT
						COUNT(*)
						FROM
						INFORMATION_SCHEMA.TABLE_CONSTRAINTS
						WHERE
						TABLE_NAME = 'germplsm'
						AND CONSTRAINT_NAME = 'germplsm_uuid'
						AND TABLE_SCHEMA = DATABASE();
					</sqlCheck>
				</not>
			</and>
		</preConditions>
		<comment>
			Drop the germplsm_uuid unique index
		</comment>
		<sql dbms="mysql" splitStatements="false">
			ALTER TABLE germplsm DROP INDEX germplsm_uuid;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.1-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'populate_germplsm_uuid_values';
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="false">
			DROP PROCEDURE populate_germplsm_uuid_values;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.1-3">
		<preConditions onFail="MARK_RAN">
			<and>
				<sqlCheck expectedResult="1">
					SELECT COUNT(*) > 0
					FROM germplsm
					WHERE germplsm_uuid IS NULL;
				</sqlCheck>
				<sqlCheck expectedResult="0">
					SELECT
					COUNT(*)
					FROM
					information_schema.routines
					WHERE
					routine_schema = DATABASE()
					AND specific_name = 'populate_germplsm_uuid_values';
				</sqlCheck>
			</and>
		</preConditions>
		<comment>
			Create Stored procedure that populates the germplsm_uuid values
		</comment>
		<sql dbms="mysql" splitStatements="false">
			CREATE PROCEDURE populate_germplsm_uuid_values()
			BEGIN

				DECLARE useUuid INT DEFAULT 1;
				DECLARE hasDuplicates INT DEFAULT 1;
				DECLARE cropPrefix VARCHAR(4) DEFAULT '';

				SELECT use_uuid, plot_code_prefix
				INTO useUuid, cropPrefix
				FROM workbench.workbench_crop
				WHERE db_name = DATABASE();

				IF useUuid = 0	THEN

					UPDATE germplsm g
			           SET germplsm_uuid = CONCAT(cropPrefix, 'G', RIGHT(sha1(CONCAT(uuid(), g.gid)), 8));

					ALTER TABLE germplsm
					ADD  INDEX germplsm_uuid_idx (germplsm_uuid ASC);


					WHILE (hasDuplicates > 0) DO

						CREATE TEMPORARY TABLE duplicate_guuids (index (gid))
						SELECT gid
						  FROM germplsm
						 WHERE germplsm_uuid IS NOT NULL
						 GROUP BY germplsm_uuid
						HAVING count(1) > 1;


						SELECT count(*)
						  INTO hasDuplicates
						  FROM duplicate_guuids;

						IF hasDuplicates > 0 THEN

							UPDATE germplsm g
							  SET germplsm_uuid = CONCAT(cropPrefix, 'G', RIGHT(sha1(CONCAT(uuid(), g.gid)), 8))
							WHERE EXISTS (SELECT 1 FROM duplicate_guuids dupe where dupe.gid = g.gid);

						END IF;

						DROP TABLE duplicate_guuids;

					END WHILE;

					ALTER TABLE germplsm
					DROP  INDEX germplsm_uuid_idx;

				ELSE

					UPDATE germplsm g
					SET germplsm_uuid = uuid()
					WHERE g.germplsm_uuid IS NULL;

				END IF;

			END;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.1-4">
		<preConditions onFail="MARK_RAN">
			<and>
				<sqlCheck expectedResult="1">
					SELECT COUNT(*) > 0
					FROM germplsm
					WHERE germplsm_uuid IS NULL;
				</sqlCheck>
				<sqlCheck expectedResult="1">
					SELECT
					COUNT(*)
					FROM
					information_schema.routines
					WHERE
					routine_schema = DATABASE()
					AND specific_name = 'populate_germplsm_uuid_values';
				</sqlCheck>
			</and>
		</preConditions>
		<sql dbms="mysql" splitStatements="false">
			call populate_germplsm_uuid_values();
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.1-5">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT
				COUNT(*)
				FROM
				information_schema.routines
				WHERE
				routine_schema = DATABASE()
				AND specific_name = 'populate_germplsm_uuid_values';
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="false">
			DROP PROCEDURE populate_germplsm_uuid_values;
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.1-6">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				SELECT
				COUNT(*)
				FROM
				INFORMATION_SCHEMA.TABLE_CONSTRAINTS
				WHERE
				TABLE_NAME = 'germplsm'
				AND CONSTRAINT_NAME = 'germplsm_uuid_UNIQUE'
				AND TABLE_SCHEMA = DATABASE();
			</sqlCheck>
		</preConditions>
		<comment>Add unique constraint</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE germplsm
			ADD UNIQUE INDEX germplsm_uuid_UNIQUE (germplsm_uuid ASC);
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v16.4.1-7">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) > 0 FROM germplsm WHERE deleted = 1 and germplsm_uuid is not null;
			</sqlCheck>
		</preConditions>
		<comment>Concat hash and date to germplsm_uuid for the deleted germplasm</comment>
		<sql dbms="mysql" splitStatements="true">
			UPDATE germplsm SET germplsm_uuid = CONCAT(germplsm_uuid, '#', DATE_FORMAT(current_timestamp, "%Y%m%d%H%i%s%f")) WHERE deleted = 1 and germplsm_uuid is not null;
		</sql>
	</changeSet>

</databaseChangeLog>
