<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">
    <changeSet author="dev-mderamos" id="v24.3.0-1">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM PERMISSION P WHERE P.NAME = 'MS_VIEW_GERMPLASM_DETAILS';
            </sqlCheck>
        </preConditions>
        <comment>Add View Germplasm Details permission</comment>
        <sql dbms="mysql" splitStatements="true">
            SET @mg_studies_permission_id = (SELECT permission_id FROM permission WHERE name = 'MANAGE_STUDIES');

            INSERT INTO permission (`name`, `description`, `parent_id`, `rank`) VALUES ('MS_VIEW_GERMPLASM_DETAILS', 'View Germplasm Details', @mg_studies_permission_id, 18);

            SET @permission_id = (SELECT permission_id FROM permission WHERE name = 'MS_VIEW_GERMPLASM_DETAILS');

            insert into role_type_permission(role_type_id, permission_id, selectable) values (1, @permission_id , 1);
            insert into role_type_permission(role_type_id, permission_id, selectable) values (2, @permission_id , 1);
            insert into role_type_permission(role_type_id, permission_id, selectable) values (3, @permission_id , 1);
        </sql>
    </changeSet>
	<changeSet author="cheryleigh" id="v24.3.0-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				SELECT count(*)
				FROM permission p, role_type_permission rtp
				WHERE p.permission_id = rtp.permission_id
					AND name in ( 'MS_ANALYZE_WITH_STA_BRAPP',
								'MS_ANALYZE_WITH_DECISION_SUPPORT',
								'MS_CREATE_GEOREFERENCE',
								'MS_EDIT_GEOREFERENCE',
								'GRAPHICAL_QUERIES')
					AND role_type_id = 3
			</sqlCheck>
		</preConditions>
		<comment>Revert deletion of BrAPI permissions for program role type</comment>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO role_type_permission (role_type_id, permission_id, selectable) VALUES ('3', (SELECT permission_id FROM permission WHERE NAME = 'MS_ANALYZE_WITH_STA_BRAPP'), '1');
			INSERT INTO role_type_permission (role_type_id, permission_id, selectable) VALUES ('3', (SELECT permission_id FROM permission WHERE NAME = 'MS_ANALYZE_WITH_DECISION_SUPPORT'), '1');
			INSERT INTO role_type_permission (role_type_id, permission_id, selectable) VALUES ('3', (SELECT permission_id FROM permission WHERE NAME = 'MS_CREATE_GEOREFERENCE'), '1');
			INSERT INTO role_type_permission (role_type_id, permission_id, selectable) VALUES ('3', (SELECT permission_id FROM permission WHERE NAME = 'MS_EDIT_GEOREFERENCE'), '1');
			INSERT INTO role_type_permission (role_type_id, permission_id, selectable) VALUES ('3', (SELECT permission_id FROM permission WHERE NAME = 'GRAPHICAL_QUERIES'), '1');
		</sql>
 	</changeSet>

	<changeSet author="mderamos" id="v24.3.0-3">
		<preConditions onFail="CONTINUE">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM PERMISSION P WHERE P.NAME = 'MS_VIEW_GERMPLASM_DETAILS';
			</sqlCheck>
		</preConditions>
		<comment>Enable/check MS_VIEW_GERMPLASM_DETAILS permission by default if user has any permission under Manage Studies Permission</comment>
		<sql dbms="mysql" splitStatements="true">
			SET @permission_id = (SELECT permission_id FROM permission WHERE name = 'MS_VIEW_GERMPLASM_DETAILS');
			INSERT INTO role_permission(role_id, permission_id)
			SELECT DISTINCT(rp.role_id), @permission_id FROM role_permission rp INNER JOIN  permission p ON rp.permission_id = p.permission_id
			WHERE p.name IN ('VIEW_STUDIES', 'CREATE_STUDIES', 'CLOSE_STUDY', 'DELETE_STUDY', 'LOCK_STUDY', 'MS_GERMPLASM_AND_CHECKS', 'MS_TREATMENT_FACTORS',
			                'MS_EXPERIMENTAL_DESIGN', 'MS_ENVIRONMENT', 'MS_STUDY_SETTINGS', 'MS_CROSSES_AND_SELECTIONS', 'MS_INVENTORY', 'MS_SAMPLE_LISTS', 'MS_SAMPLE_GENOTYPES',
			                'MS_SSA_RESULTS', 'MS_OBSERVATIONS', 'MS_STUDY_ACTIONS', 'MS_MANAGE_OBSERVATION_UNITS', 'MS_CREATE_LOTS', 'MS_MANAGE_FILES_OBSERVATIONS',
			                'MS_VIEW_GERMPLASM_AND_CHECKS', 'MS_ADD_ENTRY_DETAILS_VARIABLES', 'MS_MODIFY_ENTRY_DETAILS_VALUES', 'MS_MODIFY_COLUMNS', 'MS_REPLACE_GERMPLASM', 'MS_ADD_NEW_ENTRIES',
			                'MS_IMPORT_ENTRY_DETAILS', 'MS_VIEW_TREATMENT_FACTORS', 'MS_ADD_TREATMENT_FACTORS_VARIABLES', 'MS_VIEW_EXPERIMENTAL_DESIGN', 'MS_GENERATE_EXPERIMENTAL_DESIGN',
			                'MS_DELETE_EXPERIMENTAL_DESIGN', 'MS_VIEW_ENVIRONMENT', 'MS_ADD_ENVIRONMENTAL_CONDITIONS_VARIABLES', 'MS_ADD_ENVIRONMENT_DETAILS_VARIABLES', 'MS_MODIFY_ENVIRONMENT_VALUES',
							'MS_MODIFY_NUMBER_OF_ENVIRONMENTS', 'MS_MANAGE_FILES_ENVIRONMENT', 'MS_VIEW_STUDY_SETTINGS', 'MS_ADD_STUDY_SETTINGS_VARIABLES', 'MS_VIEW_CROSSES_AND_SELECTIONS',
			                'MS_VIEW_INVENTORY', 'MS_VIEW_SAMPLE_LISTS', 'MS_EXPORT_SAMPLE_LIST', 'MS_DELETE_SAMPLES', 'MS_IMPORT_GENOTYPES_OPTIONS', 'MS_VIEW_SAMPLE_GENOTYPES', 'MS_VIEW_SSA_RESULTS',
			                'MS_SSA_SUMMARY_STATISTICS', 'MS_SSA_MEANS_BLUE', 'MS_VIEW_OBSERVATIONS', 'MS_ADD_OBSERVATION_TRAIT_VARIABLES', 'MS_ADD_OBSERVATION_SELECTION_VARIABLES', 'MS_MANAGE_PENDING_OBSERVATIONS',
			                'MS_MANAGE_CONFIRMED_OBSERVATIONS', 'MS_ACCEPT_PENDING_OBSERVATION', 'MS_CREATE_GENOTYPING_SAMPLES', 'MS_EXECUTE_CALCULATED_VARIABLES', 'MS_DESIGN_AND_PLANNING_OPTIONS',
			                'MS_ADVANCES', 'MS_ANALYZE_WITH_STA_BRAPP', 'MS_ANALYZE_WITH_DECISION_SUPPORT', 'MS_CROSSING_OPTIONS', 'MS_FIELD_MAP_OPTIONS', 'MS_WITHDRAW_INVENTORY', 'MS_IMPORT_GENOTYPES_FROM_GIGWA',
			                'MS_IMPORT_GENOTYPES_FROM_FILE', 'MS_EXPORT_DESIGN_TEMPLATE', 'MS_CREATE_PLANTING_LABELS', 'MS_ADVANCE_STUDY', 'MS_ADVANCE_STUDY_FOR_PLANTS', 'MS_CREATE_SUB_OBSERVATION_UNITS',
			                'MS_CHANGE_PLOT_ENTRY', 'MS_EXPORT_STUDY_BOOK', 'MS_EXPORT_STUDY_ENTRIES', 'MS_EXPORT_CROSSING_TEMPLATE', 'MS_IMPORT_CROSSES', 'MS_DESIGN_NEW_CROSSES', 'MS_MAKE_FIELD_MAP',
			                'MS_VIEW_FIELD_MAP', 'MS_DELETE_FIELD_MAP', 'MS_CREATE_GEOREFERENCE', 'MS_EDIT_GEOREFERENCE', 'MS_CREATE_PENDING_WITHDRAWALS', 'MS_CREATE_CONFIRMED_WITHDRAWALS', 'MS_CANCEL_PENDING_TRANSACTIONS')
			AND NOT exists (select role_perm.role_id from role_permission role_perm where role_perm.role_id = rp.role_id AND role_perm.permission_id = @permission_id)
			GROUP BY rp.role_id;
		</sql>
	</changeSet>
</databaseChangeLog>
