<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd
		http://www.liquibase.org/xml/ns/dbchangelog-ext
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<changeSet author="maeisabelle" id="beta15-1">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT 1 FROM users u
				INNER JOIN users_roles r
				ON u.userid = r.userid,
				workbench_project p
				WHERE r.role = 'ADMIN'
				AND NOT EXISTS (
				  SELECT 1 FROM workbench_project_user_info projUser
				  WHERE projUser.user_id = u.userid
				  AND projUser.project_id = p.project_id
				)
				LIMIT 1
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO workbench_project_user_info(project_id, user_id)
			SELECT p.project_id, u.userid 
			FROM users u
			INNER JOIN users_roles r
			ON u.userid = r.userid,
			workbench_project p
			WHERE r.role = 'ADMIN'
			AND NOT EXISTS (
			  SELECT 1 FROM workbench_project_user_info projUser
			  WHERE projUser.user_id = u.userid
			  AND projUser.project_id = p.project_id
			)
		</sql>
	</changeSet>
	
	<changeSet author="maeisabelle" id="beta15-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT 1 FROM users u
				INNER JOIN users_roles r
				ON u.userid = r.userid,
				workbench_project p
				WHERE r.role = 'ADMIN'
				AND NOT EXISTS (
				  SELECT 1 FROM workbench_project_user_role workflowRole
				  WHERE workflowRole.user_id = u.userid
				  AND workflowRole.project_id = p.project_id
				  AND workflowRole.role_id = 1
				)
				LIMIT 1
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO workbench_project_user_role(project_id, user_id, role_id)
			SELECT p.project_id, u.userid, 1
			FROM users u
			INNER JOIN users_roles r
			ON u.userid = r.userid,
			workbench_project p
			WHERE r.role = 'ADMIN'
			AND NOT EXISTS (
			  SELECT 1 FROM workbench_project_user_role workflowRole
			  WHERE workflowRole.user_id = u.userid
			  AND workflowRole.project_id = p.project_id
			  AND workflowRole.role_id = 1
			)
		</sql>
	</changeSet>

</databaseChangeLog>
