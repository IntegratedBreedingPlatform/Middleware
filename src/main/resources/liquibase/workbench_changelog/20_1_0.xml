<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

	<changeSet author="mderamos" id="v20.1.0-1">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				SELECT count(*) FROM workbench_tool WHERE name = 'brapi_sync'
			</sqlCheck>
		</preConditions>
		<comment>
			Add BrAPI sync sidebar item.
		</comment>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO workbench_tool (`name`, `group_name`, `title`, `version`, `tool_type`, `path`, `parameter`, `user_tool`)
			VALUES ('brapi_sync', 'brapi_sync', 'BrAPI sync (beta)', '1.0', 'WEB', '/ibpworkbench/controller/pages/brapi-sync/', '', 0);

			SET @sidebar_category_id = (SELECT sidebar_category_id FROM workbench_sidebar_category where sidebar_category_name = 'crop_administration');

			INSERT INTO workbench_sidebar_category_link (`tool_name`, `sidebar_category_id`, `sidebar_link_name`, `sidebar_link_title`, `rank`)
			VALUES ('brapi_sync', @sidebar_category_id, 'brapi_sync', 'BrAPI sync (beta)', 3);
		</sql>
	</changeSet>

	<changeSet author="mderamos" id="v20.1.0-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				SELECT count(*) FROM permission where name = 'BRAPI_SYNC'
			</sqlCheck>
		</preConditions>
		<comment>
			add BRAPI_SYNC permission under CROP_MANAGEMENT.
		</comment>
		<sql dbms="mysql" splitStatements="true">
			SET @permission_id = (SELECT permission_id FROM permission where name = 'CROP_MANAGEMENT');
			SET @workbench_sidebar_category_link_id =  (SELECT sidebar_category_link_id FROM workbench_sidebar_category_link where tool_name = 'brapi_sync');

			INSERT INTO permission (`name`, `description`, `parent_id`, `workbench_sidebar_category_link_id`)
			VALUES ('BRAPI_SYNC', 'BrAPI sync', @permission_id , @workbench_sidebar_category_link_id);

			SET @brapi_sync_permission_id = (SELECT permission_id FROM permission where name = 'BRAPI_SYNC');

			INSERT INTO role_type_permission (role_type_id, permission_id, selectable) VALUES ('1', @brapi_sync_permission_id, '1');
			INSERT INTO role_type_permission (role_type_id, permission_id, selectable) VALUES ('2', @brapi_sync_permission_id, '1');
		</sql>
	</changeSet>

	<changeSet author="lkovacic" id="20.1.0-3">
		<preConditions onFail="MARK_RAN">
			<and>
				<sqlCheck expectedResult="1">
					SELECT count(*) FROM workbench_tool WHERE name = 'bm_list_manager_main';
				</sqlCheck>
			</and>
		</preConditions>
		<comment>
			Remove old germplasm list tool
		</comment>
		<sql dbms="mysql" splitStatements="true">
			SET @oldGermplasmCategoryLinkId =
				(select sidebar_category_link_id from workbench_sidebar_category_link where tool_name  = 'bm_list_manager_main');

			<!-- At this point old germplasm module permission should have been removed. Just for fail-safe, we delete just in case
			that someone manually added the permissions and prevent a FK error -->
			DELETE role_permission FROM role_permission INNER JOIN permission p ON role_permission.permission_id = p.permission_id
				WHERE p.workbench_sidebar_category_link_id = @oldGermplasmCategoryLinkId;

			DELETE FROM permission WHERE workbench_sidebar_category_link_id = @oldGermplasmCategoryLinkId;

			DELETE FROM workbench_tool WHERE name = 'bm_list_manager_main';
		</sql>
	</changeSet>
	
		<changeSet author="rowena" id="20.1.0-4">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="1">
                SELECT COUNT(*) > 0
				FROM germplsm g
						 INNER JOIN location l1
						 INNER JOIN location l2
				WHERE g.glocn = l1.locid AND l1.locid > l2.locid AND l1.lname = l2.lname AND l1.ltype = l2.ltype AND l1.cntryid = l2.cntryid AND l1.locid = l1.snl1id
              </sqlCheck>
        </preConditions>
        <comment> check if there are germplasm using duplicate location_id. Replace the duplicates with the locid of the minimum location ID of the duplicate</comment>
		<sql dbms="mysql" splitStatements="true">
	      	UPDATE germplsm g INNER JOIN location l1 INNER JOIN location l2
			SET glocn = l1.locid
			WHERE g.glocn = l1.locid AND l1.locid &lt; l2.locid AND l1.lname = l2.lname AND l1.ltype= l2.ltype AND l1.cntryid = l2.cntryid AND l1.locid=l1.snl1id;
		</sql>
	</changeSet>

</databaseChangeLog>
