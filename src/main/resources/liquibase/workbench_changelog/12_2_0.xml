<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

	<changeSet author="nahuel" id="v12.2.0-1">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM workbench_sidebar_category_link_role where sidebar_category_link_id = "about_bms";
			</sqlCheck>
		</preConditions>
		<comment>Delete about_bms from workbench_sidebar_category_link_role</comment>
		<sql dbms="mysql" splitStatements="true">
			DELETE FROM workbench_sidebar_category_link_role where sidebar_category_link_id = "about_bms";
		</sql>
	</changeSet>

	<changeSet author="nahuel" id="v12.2.0-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM workbench_sidebar_category_link where tool_name = "about_bms";
			</sqlCheck>
		</preConditions>
		<comment>Delete about_bms from workbench_sidebar_category_link</comment>
		<sql dbms="mysql" splitStatements="true">
			DELETE FROM workbench_sidebar_category_link WHERE tool_name = "about_bms";
		</sql>
	</changeSet>

	<changeSet author="nahuel" id="v12.2.0-3">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM workbench_tool where name = "about_bms";
			</sqlCheck>
		</preConditions>
		<comment>Delete about_bms from workbench_tool</comment>
		<sql dbms="mysql" splitStatements="true">
			DELETE FROM workbench_tool where name = "about_bms";
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-1">
		<preConditions onFail="MARK_RAN">
			<not>
				<and>
					<columnExists tableName="users_roles" columnName="crop_name"/>
					<columnExists tableName="users_roles" columnName="workbench_project_id"/>
				</and>
			</not>
		</preConditions>
		<comment>
			Alter table users_roles to add crop_name and workbench_project_id
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE users_roles
			CHANGE COLUMN id id INT(11) NOT NULL,
			ADD COLUMN crop_name VARCHAR(32) NULL,
			ADD COLUMN workbench_project_id INT(10) UNSIGNED NULL DEFAULT NULL;
			ALTER TABLE users_roles
			ADD CONSTRAINT fk_workbenck_project
			FOREIGN KEY (workbench_project_id)
			REFERENCES workbench_project (project_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-2">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="role_type"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE role_type (
			role_type_id INT(11) NOT NULL,
			name VARCHAR(100) NOT NULL,
			PRIMARY KEY (role_type_id));

			INSERT INTO role_type VALUES (0, "INSTANCE");
			INSERT INTO role_type VALUES (1, "CROP");
			INSERT INTO role_type VALUES (2, "PROGRAM");
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-3">
		<preConditions onFail="MARK_RAN">
			<and>
				<columnExists tableName="role" columnName="description"/>
				<not>
					<columnExists tableName="role" columnName="name"/>
				</not>
			</and>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			CHANGE COLUMN description name VARCHAR(100) NOT NULL ,
			ADD COLUMN description VARCHAR(255) NOT NULL;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-4">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="permission"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE permission (
			permission_id INT(11) NOT NULL AUTO_INCREMENT,
			name VARCHAR(45) NOT NULL,
			description VARCHAR(45) NULL,
			parent_id INT(11) NULL,
			workbench_sidebar_category_id INT(11) NOT NULL,
			PRIMARY KEY (permission_id)
			);


			ALTER TABLE permission
			ADD INDEX fk_permission_1_idx (parent_id ASC),
			ADD INDEX fk_permission_2_idx (workbench_sidebar_category_id ASC);
			ALTER TABLE permission
			ADD CONSTRAINT fk_permission_1
			FOREIGN KEY (parent_id)
			REFERENCES permission (permission_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION,
			ADD CONSTRAINT fk_permission_2
			FOREIGN KEY (workbench_sidebar_category_id)
			REFERENCES workbench_sidebar_category_link (sidebar_category_link_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-5">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="role_permission"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE role_permission (
			role_id INT(11) NOT NULL,
			permission_id INT(11) NULL,
			PRIMARY KEY (role_id, permission_id),
			INDEX fk_role_permission_2_idx (permission_id ASC),
			CONSTRAINT fk_role_permission_1
			FOREIGN KEY (role_id)
			REFERENCES role (id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION,
			CONSTRAINT fk_role_permission_2
			FOREIGN KEY (permission_id)
			REFERENCES permission (permission_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION);
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-6">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="role_type_permission"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE role_type_permission (
			role_type_id INT(11) NOT NULL,
			permission_id INT(11) NULL,
			selectable TINYINT(1) NULL,
			PRIMARY KEY (role_type_id),
			INDEX fk_role_type_permission_2_idx (permission_id ASC),
			CONSTRAINT fk_role_type_permission_1
			FOREIGN KEY (role_type_id)
			REFERENCES role_type (role_type_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION,
			CONSTRAINT fk_role_type_permission_2
			FOREIGN KEY (permission_id)
			REFERENCES permission (permission_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION);
		</sql>
	</changeSet>


</databaseChangeLog>
