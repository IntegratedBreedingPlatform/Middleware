<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.5.xsd">

	<changeSet author="nahuel" id="v12.2.0-1">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM workbench_sidebar_category_link_role where sidebar_category_link_id = "about_bms";
			</sqlCheck>
		</preConditions>
		<comment>Delete about_bms from workbench_sidebar_category_link_role</comment>
		<sql dbms="mysql" splitStatements="true">
			DELETE FROM workbench_sidebar_category_link_role where sidebar_category_link_id = "about_bms";
		</sql>
	</changeSet>

	<changeSet author="nahuel" id="v12.2.0-2">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM workbench_sidebar_category_link where tool_name = "about_bms";
			</sqlCheck>
		</preConditions>
		<comment>Delete about_bms from workbench_sidebar_category_link</comment>
		<sql dbms="mysql" splitStatements="true">
			DELETE FROM workbench_sidebar_category_link WHERE tool_name = "about_bms";
		</sql>
	</changeSet>

	<changeSet author="nahuel" id="v12.2.0-3">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM workbench_tool where name = "about_bms";
			</sqlCheck>
		</preConditions>
		<comment>Delete about_bms from workbench_tool</comment>
		<sql dbms="mysql" splitStatements="true">
			DELETE FROM workbench_tool where name = "about_bms";
		</sql>
	</changeSet>

	<changeSet author="nahuel" id="v12.2.0-4">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				SELECT COUNT(*) FROM information_schema.routines
				WHERE routine_schema = DATABASE() AND specific_name = 'assignCropsToSuperAdmin';
			</sqlCheck>
		</preConditions>
		<comment>Create sp to associate all superadmins to every crop</comment>
		<sql dbms="mysql" splitStatements="false">
			# Create an stored procedure instead of just a simple sql statement with runAlways
			# so that it can be altered in the future if the schema changes
			# without the need to remove the changeset

			create procedure assignCropsToSuperAdmin()
			begin
			    # for every combination of superadmins and crops
			    # filter those that don't have a users_crops association
			    # and insert them into users_crops
			    insert into users_crops (user_id, crop_name)
			    select u.userid, wc.crop_name
			    from workbench_crop wc
			           cross join users u
			           left join users_crops uc on wc.crop_name = uc.crop_name and u.userid = uc.user_id
			           inner join users_roles ur on u.userid = ur.userid
			           inner join role r on ur.role_id = r.id
			    where uc.user_id is null and r.id = 5;
			end;
		</sql>
	</changeSet>

	<changeSet author="nahuel" id="v12.2.0-5" runAlways="true">
		<preConditions onFail="CONTINUE">
			<sqlCheck expectedResult="1">
				SELECT COUNT(*) FROM information_schema.routines
				WHERE routine_schema = DATABASE() AND specific_name = 'assignCropsToSuperAdmin';
			</sqlCheck>
		</preConditions>
		<comment>Run sp to associate all superadmins to every crop</comment>
		<sql dbms="mysql" splitStatements="true">
			# Run always to populate new crops
			call assignCropsToSuperAdmin();
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-1">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="users_roles" columnName="crop_name"/>
			</not>
		</preConditions>
		<comment>
			Alter table users_roles to add crop_name
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE users_roles
			ADD COLUMN crop_name VARCHAR(32) NULL;
			ALTER TABLE users_roles 
			ADD INDEX fk_crop_name_idx (crop_name ASC);
			ALTER TABLE users_roles 
			ADD CONSTRAINT fk_crop_name
			  FOREIGN KEY (crop_name)
			  REFERENCES workbench_crop (crop_name)
			  ON DELETE NO ACTION
			  ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-2">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="users_roles" columnName="workbench_project_id"/>
			</not>
		</preConditions>
		<comment>
			Alter table users_roles to add workbench_project_id
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE users_roles
			ADD COLUMN workbench_project_id INT(10) UNSIGNED NULL DEFAULT NULL;
			ALTER TABLE users_roles
			ADD CONSTRAINT fk_workbenck_project
			FOREIGN KEY (workbench_project_id)
			REFERENCES workbench_project (project_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-3">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="users_roles" columnName="created_by"/>
			</not>
		</preConditions>
		<comment>
			Alter table users_roles to add created_by
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE users_roles
			ADD COLUMN created_by INT(11) NULL;

			ALTER TABLE users_roles
			ADD INDEX fk_users_roles_2_idx (created_by ASC);
			ALTER TABLE users_roles
			ADD CONSTRAINT fk_users_roles_2
			FOREIGN KEY (created_by)
			REFERENCES users (userid)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-4">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="users_roles" columnName="updated_by"/>
			</not>
		</preConditions>
		<comment>
			Alter table users_roles to add updated_by
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE users_roles
			ADD COLUMN updated_by INT(11) NULL;

			ALTER TABLE users_roles
			ADD CONSTRAINT fk_users_roles_1
			FOREIGN KEY (updated_by)
			REFERENCES users (userid)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-6">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="users_roles" columnName="created_date"/>
			</not>
		</preConditions>
		<comment>
			Alter table users_roles to add created_date
		</comment>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE users_roles
			ADD COLUMN created_date TIMESTAMP NULL DEFAULT NULL;

			alter table users_roles
			  modify COLUMN created_date TIMESTAMP NULL default CURRENT_TIMESTAMP;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-7">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="role_type"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE role_type (
			role_type_id INT(11) NOT NULL,
			name VARCHAR(100) NOT NULL,
			PRIMARY KEY (role_type_id));

			INSERT INTO role_type VALUES (1, "INSTANCE");
			INSERT INTO role_type VALUES (2, "CROP");
			INSERT INTO role_type VALUES (3, "PROGRAM");
		</sql>
	</changeSet>

		<changeSet author="vanina" id="v12.2.0-8">
		<preConditions onFail="MARK_RAN">
			<and>
				<not>
					<columnExists tableName="role" columnName="created_by"/>
				</not>
			</and>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			ADD COLUMN created_by INT(11) NULL;

			ALTER TABLE role
			ADD INDEX fk_role_1_idx (created_by ASC);
			ALTER TABLE role
			ADD CONSTRAINT fk_role_1
			FOREIGN KEY (created_by)
			REFERENCES users (userid)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-9">
		<preConditions onFail="MARK_RAN">
			<and>
				<columnExists tableName="role" columnName="description"/>
				<not>
					<columnExists tableName="role" columnName="name"/>
				</not>
			</and>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			CHANGE COLUMN description name VARCHAR(100) NOT NULL;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-10">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="role" columnName="updated_by"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			ADD COLUMN updated_by INT(11) NULL;
			ALTER TABLE role
			ADD INDEX fk_role_2_idx (updated_by ASC);
			ALTER TABLE role
			ADD CONSTRAINT fk_role_2
			FOREIGN KEY (updated_by)
			REFERENCES users (userid)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION;

		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-11">
		<preConditions onFail="MARK_RAN">
				<not>
					<columnExists tableName="role" columnName="updated_date"/>
				</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			ADD COLUMN updated_date TIMESTAMP NULL DEFAULT NULL;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-12">
		<preConditions onFail="MARK_RAN">
				<not>
					<columnExists tableName="role" columnName="created_date"/>
				</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			ADD COLUMN created_date TIMESTAMP NULL DEFAULT NULL;

			alter table role
			  modify COLUMN created_date TIMESTAMP NULL default CURRENT_TIMESTAMP;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-13">
		<preConditions onFail="MARK_RAN">
				<not>
					<columnExists tableName="role" columnName="active"/>
				</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			ADD COLUMN active TINYINT(1) NULL DEFAULT 1;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-14">
		<preConditions onFail="MARK_RAN">
				<not>
					<columnExists tableName="role" columnName="editable"/>
				</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			ADD COLUMN editable TINYINT(1) NULL DEFAULT 1;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-15">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="role" columnName="assignable"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			ADD COLUMN assignable TINYINT(1) NULL DEFAULT 1;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-16">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="permission"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE permission (
			permission_id INT(11) NOT NULL AUTO_INCREMENT,
			name VARCHAR(255) NOT NULL,
			description VARCHAR(255) NULL,
			parent_id INT(11) NULL,
			workbench_sidebar_category_id INT(11) NULL,
			PRIMARY KEY (permission_id)
			);


			ALTER TABLE permission
			ADD INDEX fk_permission_1_idx (parent_id ASC),
			ADD INDEX fk_permission_2_idx (workbench_sidebar_category_id ASC);
			ALTER TABLE permission
			ADD CONSTRAINT fk_permission_1
			FOREIGN KEY (parent_id)
			REFERENCES permission (permission_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION,
			ADD CONSTRAINT fk_permission_2
			FOREIGN KEY (workbench_sidebar_category_id)
			REFERENCES workbench_sidebar_category_link (sidebar_category_link_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-17">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="role_permission"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE role_permission (
			role_id INT(11) NOT NULL,
			permission_id INT(11) NULL,
			PRIMARY KEY (role_id, permission_id),
			INDEX fk_role_permission_2_idx (permission_id ASC),
			CONSTRAINT fk_role_permission_1
			FOREIGN KEY (role_id)
			REFERENCES role (id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION,
			CONSTRAINT fk_role_permission_2
			FOREIGN KEY (permission_id)
			REFERENCES permission (permission_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION);
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-18">
		<preConditions onFail="MARK_RAN">
			<not>
				<tableExists tableName="role_type_permission"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			CREATE TABLE role_type_permission (
			role_type_id INT(11) NOT NULL,
			permission_id INT(11) NOT NULL,
			selectable TINYINT(1) NULL,
			PRIMARY KEY (role_type_id, permission_id),
			INDEX fk_role_type_permission_2_idx (permission_id ASC),
			CONSTRAINT fk_role_type_permission_1
			FOREIGN KEY (role_type_id)
			REFERENCES role_type (role_type_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION,
			CONSTRAINT fk_role_type_permission_2
			FOREIGN KEY (permission_id)
			REFERENCES permission (permission_id)
			ON DELETE NO ACTION
			ON UPDATE NO ACTION);
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-19">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				select count(1)
				from permission
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (1, 'ADMIN','Full',null,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (2, 'ADMINISTRATION','Administration',1,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (3, 'CROP_MANAGEMENT','Crop Management',1,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (4, 'BREEDING_ACTIVITIES','Breeding Activities',1,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (5, 'INFORMATION_MANAGEMENT','Information Management',1,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (6, 'STATISTICAL_ANALYSIS','Statistical Analysis',1,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (7, 'SITE_ADMIN','Site Admin',2,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (8, 'MANAGE_ONTOLOGIES','Manage Ontologies',3,10);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (9, 'IMPORT_GERMPLASM','Import Germplasm',3,5);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (10, 'MANAGE_GENOTYPING_DATA','Manage Genotyping Data',3,6);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (11, 'MANAGE_PROGRAMS','Manage programs',3,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (12, 'ADD_PROGRAM','Add Program',11,null);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (13, 'MANAGE_PROGRAM_SETTINGS','Manage Program Settings',11,24);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (14, 'MANAGE_GERMPLASM','Manage Germplasm',4,1);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (15, 'MANAGE_SAMPLES','Manage Samples',4,28);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (16, 'MANAGE_STUDIES','Manage Studies',4,23);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (17, 'BROWSE_STUDIES','Browse Studies',5,7);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (18, 'HEAD_TO_HEAD_QUERY','Head to Head Query',5,8);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (19, 'MULTI_TRAIT_QUERY','Multi-trait Query',5,27);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (20, 'IMPORT_DATASETS','Import Datasets',5,19);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (21, 'SINGLE_SITE_ANALYSIS','Single-Site Analysis',6,11);
			INSERT INTO permission (permission_id, name, description, parent_id, workbench_sidebar_category_id) values (22, 'MULTI_SITE_ANALYSIS','Multi-Site Analysis',6,12);
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-20">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				select count(1)
				from role_type_permission
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (1,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (2,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (3,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (4,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (5,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (6,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (7,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (8,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (9,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (10,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (11,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (14,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (15,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (16,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (17,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (18,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (19,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (20,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (21,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (22,1,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (1,2,0);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (3,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (4,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (5,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (7,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (8,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (9,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (10,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (11,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (14,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (15,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (16,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (17,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (18,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (19,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (20,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (21,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (22,2,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (1,3,0);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (3,3,0);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (4,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (5,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (6,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (11,3,0);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (13,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (14,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (15,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (16,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (17,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (18,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (19,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (20,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (21,3,1);
			INSERT INTO role_type_permission (permission_id, role_type_id, selectable) VALUES (22,3,1);
		</sql>
	</changeSet>


	<changeSet author="vanina" id="v12.2.0-21">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="0">
				select count(1)
				from role_permission
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			INSERT INTO role_permission (permission_id, role_id) VALUES (1,1);
			INSERT INTO role_permission (permission_id, role_id) VALUES (1,5);
			INSERT INTO role_permission (permission_id, role_id) VALUES (10,2);
			INSERT INTO role_permission (permission_id, role_id) VALUES (4,2);
			INSERT INTO role_permission (permission_id, role_id) VALUES (5,2);
			INSERT INTO role_permission (permission_id, role_id) VALUES (6,2);
			INSERT INTO role_permission (permission_id, role_id) VALUES (10,3);
			INSERT INTO role_permission (permission_id, role_id) VALUES (4,3);
			INSERT INTO role_permission (permission_id, role_id) VALUES (5,3);
			INSERT INTO role_permission (permission_id, role_id) VALUES (6,3);
			INSERT INTO role_permission (permission_id, role_id) VALUES (14,4);
			INSERT INTO role_permission (permission_id, role_id) VALUES (17,4);
			INSERT INTO role_permission (permission_id, role_id) VALUES (18,4);
			INSERT INTO role_permission (permission_id, role_id) VALUES (19,4);
			INSERT INTO role_permission (permission_id, role_id) VALUES (20,4);
			INSERT INTO role_permission (permission_id, role_id) VALUES (21,4);
			INSERT INTO role_permission (permission_id, role_id) VALUES (22,4);
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-22">
		<preConditions onFail="MARK_RAN">
			<not>
				<columnExists tableName="role" columnName="description"/>
			</not>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			ALTER TABLE role
			ADD COLUMN description VARCHAR(255) NOT NULL;
		</sql>
	</changeSet>

	<changeSet author="vanina" id="v12.2.0-23">
		<preConditions onFail="MARK_RAN">
			<sqlCheck expectedResult="5">
				select count(1) from role where id = 5;
			</sqlCheck>
		</preConditions>
		<sql dbms="mysql" splitStatements="true">
			UPDATE role SET active = 1, editable = 0, assignable = 0 WHERE id = 5;
		</sql>
	</changeSet>
</databaseChangeLog>
