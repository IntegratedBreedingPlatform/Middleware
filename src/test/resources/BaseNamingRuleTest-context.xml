<?xml version="1.0" encoding="ISO-8859-1"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns="http://www.springframework.org/schema/beans"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.1.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- Declare property file locations  -->
	<context:property-placeholder location="classpath:test.properties, classpath:crossing.properties" />


   	<bean class="org.generationcp.middleware.ruleengine.naming.newexpression.ComponentPostProcessor">
        <property name="ruleFactory" ref="ruleFactory"/>
		<property name="processCodeFactory" ref="processCodeFactory" />
    </bean>

    <bean id="ruleFactory" class="org.generationcp.middleware.ruleengine.ProcessCodeRuleFactory"
          init-method="init"/>

    <bean id="ruleConfigProvider"
          class="org.generationcp.middleware.ruleengine.provider.PropertyFileRuleConfigurationProvider">
        <property name="ruleSequenceConfiguration">
            <map>
                <entry key="naming" value="${naming.rules}"/>
            </map>
        </property>
    </bean>
	<bean id="ruleService" class="org.generationcp.middleware.ruleengine.impl.RulesServiceImpl" />

	<bean id="germplasmNamingService" class="org.generationcp.middleware.ruleengine.naming.impl.GermplasmNamingServiceImpl" />

    <!--
            This component scan automatically registers all implementations of the Rule interface into the Spring context.
            In conjunction with the RulesPostProcessor above, this automatically populates the map in the RuleFactory
             -->
	<context:component-scan base-package="org.generationcp.middleware.ruleengine.naming" />
	<context:component-scan base-package="org.generationcp.middleware.ruleengine.naming.newexpression" />

	<bean id="processCodeFactory"
		  class="org.generationcp.middleware.ruleengine.naming.newimpl.ProcessCodeFactory"
		  init-method="init"/>

	<!-- Singleton bean as there is nothing request specific in here. -->
	<bean id="germplasmNamingProperties" class="org.generationcp.middleware.ruleengine.service.GermplasmNamingProperties">
		<property name="germplasmOriginStudiesDefault" value="${germplasm.origin.studies.default}"/>
		<property name="germplasmOriginStudiesWheat" value="${germplasm.origin.studies.wheat}"/>
		<property name="germplasmOriginStudiesMaize" value="${germplasm.origin.studies.maize}"/>
        <property name="breedersCrossIDStudy" value="${breeders.cross.id.study}" />
	</bean>

    <bean id="breedersCrossIDGenerator" class="org.generationcp.middleware.ruleengine.generator.BreedersCrossIDGenerator">
	</bean>

	<bean id="messageSource"
			  class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="Messages" />
    </bean>

</beans>
